import discord
from discord.ext import commands
import asyncio
import os
from config import BOT_PREFIX
from music_commands import setup as setup_music

class MusicBot(commands.Bot):
    def __init__(self):
        intents = discord.Intents.default()
        intents.message_content = True
        intents.voice_states = True
        
        super().__init__(
            command_prefix=BOT_PREFIX,
            intents=intents,
            help_command=None,
            description="üéµ Discord Zene Bot - Magyar nyelv≈± zene lej√°tsz√≥ bot"
        )
        
        self.initial_extensions = []
    
    async def setup_hook(self):
        """Bot ind√≠t√°sakor fut le"""
        print("üéµ Discord Zene Bot ind√≠t√°sa...")
        
        # Zene parancsok bet√∂lt√©se
        try:
            setup_music(self)
            print("‚úÖ Zene parancsok bet√∂ltve!")
        except Exception as e:
            print(f"‚ùå Hiba a zene parancsok bet√∂lt√©se sor√°n: {e}")
        
        # Slash parancsok regisztr√°l√°sa √©s szinkroniz√°l√°sa
        try:
            await self.tree.sync()
            print("‚úÖ Slash parancsok szinkroniz√°lva!")
        except Exception as e:
            print(f"‚ùå Hiba a slash parancsok szinkroniz√°l√°sa sor√°n: {e}")
        
        print("‚úÖ Bot be√°ll√≠t√°sok k√©sz!")
    
    async def on_ready(self):
        """Bot sikeresen elindult"""
        print(f"üéµ {self.user} sikeresen elindult!")
        print(f"üìä {len(self.guilds)} szerveren vagyok jelen")
        print(f"üë• {len(self.users)} felhaszn√°l√≥val kapcsol√≥dok")
        
        # Slash parancsok √∫jra szinkroniz√°l√°sa minden szerveren
        try:
            await self.tree.sync()
            print("‚úÖ Slash parancsok minden szerveren szinkroniz√°lva!")
        except Exception as e:
            print(f"‚ùå Hiba a slash parancsok szinkroniz√°l√°sa sor√°n: {e}")
        
        # Bot st√°tusz be√°ll√≠t√°sa
        await self.change_presence(
            activity=discord.Activity(
                type=discord.ActivityType.listening,
                name="/music play | Zene lej√°tsz√°s"
            )
        )
    
    async def on_command_error(self, ctx, error):
        """Parancs hib√°k kezel√©se"""
        if isinstance(error, commands.CommandNotFound):
            embed = discord.Embed(
                title="‚ùå Ismeretlen parancs!",
                description=f"A `{ctx.message.content}` parancs nem l√©tezik!\n"
                           f"Haszn√°ld a `/help help` parancsot a seg√≠ts√©g√©rt!",
                color=0xff0000
            )
            await ctx.send(embed=embed)
        
        elif isinstance(error, commands.MissingRequiredArgument):
            embed = discord.Embed(
                title="‚ùå Hi√°nyz√≥ argumentum!",
                description=f"A `{ctx.command.name}` parancshoz sz√ºks√©ges argumentum hi√°nyzik!\n"
                           f"Haszn√°lat: `/{ctx.command.name} {ctx.command.signature}`",
                color=0xff0000
            )
            await ctx.send(embed=embed)
        
        else:
            embed = discord.Embed(
                title="‚ùå Hiba t√∂rt√©nt!",
                description=f"V√°ratlan hiba: {str(error)}",
                color=0xff0000
            )
            await ctx.send(embed=embed)
            print(f"Hiba a {ctx.command.name} parancsn√°l: {error}")

def setup_environment():
    """K√∂rnyezeti v√°ltoz√≥k be√°ll√≠t√°sa"""
    # .env f√°jl l√©trehoz√°sa ha nem l√©tezik
    env_file = '.env'
    if not os.path.exists(env_file):
        print("üìÅ .env f√°jl l√©trehoz√°sa...")
        try:
            with open(env_file, 'w', encoding='utf-8') as f:
                f.write("# Discord Bot Token\n")
                f.write("BOT_TOKEN=your_bot_token_here\n\n")
                f.write("# Spotify API kulcsok - K√ñTELEZ≈ê a Spotify t√°mogat√°shoz!\n")
                f.write("# Szerezd be innen: https://developer.spotify.com/dashboard/applications\n")
                f.write("SPOTIFY_CLIENT_ID=your_spotify_client_id_here\n")
                f.write("SPOTIFY_CLIENT_SECRET=your_spotify_client_secret_here\n\n")
                f.write("# Bot prefix\n")
                f.write("BOT_PREFIX=!\n")
            print("‚úÖ .env f√°jl l√©trehozva!")
        except Exception as e:
            print(f"‚ö†Ô∏è Nem siker√ºlt l√©trehozni a .env f√°jlt: {e}")

def get_bot_token():
    """Bot token be√°ll√≠t√°sa"""
    # El≈ësz√∂r pr√≥b√°ljuk a k√∂rnyezeti v√°ltoz√≥b√≥l
    token = os.getenv('BOT_TOKEN')

    if not token or token == 'your_bot_token_here':
        # Ha nincs, bek√©rj√ºk a felhaszn√°l√≥t√≥l
        print("üéµ Discord Zene Bot - Slash parancsokkal")
        print("=" * 50)
        print("üìã K√©rlek √°ll√≠tsd be a k√∂vetkez≈ëket:")
        print()
        
        # Bot token bek√©r√©se
        token = input("üéµ Discord bot token: ").strip()
        if not token:
            print("‚ùå Hiba: Token megad√°sa k√∂telez≈ë!")
            return None

        # Spotify API kulcsok bek√©r√©se
        print("\nüéµ Spotify API be√°ll√≠t√°sa (opcion√°lis, de aj√°nlott):")
        print("   Szerezd be innen: https://developer.spotify.com/dashboard/applications")
        spotify_id = input("üéµ Spotify Client ID (vagy Enter a kihagy√°shoz): ").strip()
        spotify_secret = input("üéµ Spotify Client Secret (vagy Enter a kihagy√°shoz): ").strip()

        # K√∂rnyezeti v√°ltoz√≥k be√°ll√≠t√°sa
        os.environ['BOT_TOKEN'] = token
        if spotify_id:
            os.environ['SPOTIFY_CLIENT_ID'] = spotify_id
        if spotify_secret:
            os.environ['SPOTIFY_CLIENT_SECRET'] = spotify_secret

        # .env f√°jl friss√≠t√©se
        try:
            with open('.env', 'w', encoding='utf-8') as f:
                f.write(f"# Discord Bot Token\n")
                f.write(f"BOT_TOKEN={token}\n\n")
                f.write(f"# Spotify API kulcsok\n")
                f.write(f"SPOTIFY_CLIENT_ID={spotify_id if spotify_id else 'your_spotify_client_id_here'}\n")
                f.write(f"SPOTIFY_CLIENT_SECRET={spotify_secret if spotify_secret else 'your_spotify_client_secret_here'}\n\n")
                f.write(f"# Bot prefix\n")
                f.write(f"BOT_PREFIX=!\n")
            print("‚úÖ Be√°ll√≠t√°sok mentve a .env f√°jlba!")
        except Exception as e:
            print(f"‚ö†Ô∏è Nem siker√ºlt menteni a .env f√°jlt: {e}")

    return token

async def main():
    """F≈ë f√ºggv√©ny"""
    # K√∂rnyezet be√°ll√≠t√°sa
    setup_environment()
    
    # Bot token be√°ll√≠t√°sa
    token = get_bot_token()
    if not token:
        return
    
    print("‚úÖ Bot token be√°ll√≠tva!")
    
    bot = MusicBot()
    
    try:
        await bot.start(token)
    except discord.LoginFailure:
        print("‚ùå Hiba: √ârv√©nytelen bot token!")
    except Exception as e:
        print(f"‚ùå V√°ratlan hiba: {e}")

if __name__ == "__main__":
    asyncio.run(main())
